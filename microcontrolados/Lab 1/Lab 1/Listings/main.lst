


ARM Macro Assembler    Page 1 


    1 00000000         ; Este programa deve esperar o usuário pressionar uma ch
                       ave.
    2 00000000         ; Caso o usuário pressione uma chave, um LED deve piscar
                        a cada 1 segundo.
    3 00000000         
    4 00000000         ; ------------------------------------------------------
                       -------------------------
    5 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    6 00000000         ; ------------------------------------------------------
                       -------------------------
    7 00000000         
    8 00000000         ; Declarações EQU - Defines
    9 00000000         ;<NOME>         EQU <VALOR>
   10 00000000         ; ========================
   11 00000000         ; Definições de Valores
   12 00000000         
   13 00000000         
   14 00000000         ; ------------------------------------------------------
                       -------------------------
   15 00000000         ; Área de Dados - Declarações de variáveis
   16 00000000                 AREA             DATA, ALIGN=2
   17 00000000         ; Se alguma variável for chamada em outro arquivo
   18 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   19 00000000         ; partir de outro arquivo
   20 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   21 00000000         ; de <tam> bytes a partir da primeira 
   22 00000000         ; posição da RAM  
   23 00000000         
   24 00000000         ; ------------------------------------------------------
                       -------------------------
   25 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   26 00000000         ;                  código
   27 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   28 00000000         
   29 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   30 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   31 00000000         ; outro arquivo. No caso startup.s
   32 00000000         
   33 00000000         ; Se chamar alguma função externa 
   34 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   35 00000000         ; função <func>
   36 00000000                 IMPORT           PLL_Init
   37 00000000                 IMPORT           SysTick_Init
   38 00000000                 IMPORT           SysTick_Wait1ms
   39 00000000                 IMPORT           GPIO_Init
   40 00000000                 IMPORT           PortA_Output
   41 00000000                 IMPORT           PortB_Output
   42 00000000                 IMPORT           PortQ_Output
   43 00000000                 IMPORT           PortP_Output
   44 00000000                 IMPORT           PortJ_Input



ARM Macro Assembler    Page 2 


   45 00000000                 IMPORT           primo
   46 00000000                 IMPORT           dec7
   47 00000000         
   48 00000000         
   49 00000000         ; ------------------------------------------------------
                       -------------------------
   50 00000000         ; Função main()
   51 00000000         Start
   52 00000000         ;BL PLL_Init                  ;Chama a subrotina para al
                       terar o clock do microcontrolador para 80MHz
   53 00000000         ;BL SysTick_Init              ;Chama a subrotina para in
                       icializar o SysTick
   54 00000000         ;BL GPIO_Init                 ;Chama a subrotina que ini
                       cializa os GPIO
   55 00000000         
   56 00000000         MainLoop
   57 00000000 F04F 0A00       MOV              R10,#0
   58 00000004 F7FF BFFE       B                dec7
   59 00000008 E7FA            B                MainLoop
   60 0000000A         
   61 0000000A         
   62 0000000A         
   63 0000000A         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
   64 0000000A         ; Fim do Arquivo
   65 0000000A         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
   66 0000000A 00 00           ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
   67 0000000C                 END                          ;Fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\main.d -o.\objects\main.o -IE:\Documents\Jose_Micro\G
PIO2\RTE -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 -IC:\
Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VE
RSION SETA 518" --predefine="TM4C1294NCPDT SETA 1" --list=.\listings\main.lst m
ain.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 16 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 27 in file main.s
   Uses
      None
Comment: .text unused
MainLoop 00000000

Symbol: MainLoop
   Definitions
      At line 56 in file main.s
   Uses
      At line 59 in file main.s
Comment: MainLoop used once
Start 00000000

Symbol: Start
   Definitions
      At line 51 in file main.s
   Uses
      At line 30 in file main.s
Comment: Start used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 39 in file main.s
   Uses
      None
Comment: GPIO_Init unused
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 36 in file main.s
   Uses
      None
Comment: PLL_Init unused
PortA_Output 00000000

Symbol: PortA_Output
   Definitions
      At line 40 in file main.s
   Uses
      None
Comment: PortA_Output unused
PortB_Output 00000000

Symbol: PortB_Output
   Definitions
      At line 41 in file main.s
   Uses
      None
Comment: PortB_Output unused
PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 44 in file main.s
   Uses
      None
Comment: PortJ_Input unused
PortP_Output 00000000

Symbol: PortP_Output
   Definitions
      At line 43 in file main.s
   Uses
      None
Comment: PortP_Output unused
PortQ_Output 00000000

Symbol: PortQ_Output
   Definitions
      At line 42 in file main.s
   Uses
      None
Comment: PortQ_Output unused
SysTick_Init 00000000

Symbol: SysTick_Init



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 37 in file main.s
   Uses
      None
Comment: SysTick_Init unused
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 38 in file main.s
   Uses
      None
Comment: SysTick_Wait1ms unused
dec7 00000000

Symbol: dec7
   Definitions
      At line 46 in file main.s
   Uses
      At line 58 in file main.s
Comment: dec7 used once
primo 00000000

Symbol: primo
   Definitions
      At line 45 in file main.s
   Uses
      None
Comment: primo unused
11 symbols
349 symbols in table
