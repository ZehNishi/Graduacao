


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         ; Este programa espera o usuário apertar a chave USR_SW1
                        e/ou a chave USR_SW2.
    3 00000000         ; Caso o usuário pressione a chave USR_SW1, acenderá o L
                       ED3 (PF4). Caso o usuário pressione 
    4 00000000         ; a chave USR_SW2, acenderá o LED4 (PF0). Caso as duas c
                       haves sejam pressionadas, os dois 
    5 00000000         ; LEDs acendem.
    6 00000000         
    7 00000000         ; ------------------------------------------------------
                       -------------------------
    8 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    9 00000000         ; ------------------------------------------------------
                       -------------------------
   10 00000000         ; Declarações EQU - Defines
   11 00000000         ;<NOME>         EQU <VALOR>
   12 00000000         ; ========================
   13 00000000         
   14 00000000         
   15 00000000         ; ------------------------------------------------------
                       -------------------------
   16 00000000         ; Área de Dados - Declarações de variáveis
   17 00000000                 AREA             DATA, ALIGN=2
   18 00000000         ; Se alguma variável for chamada em outro arquivo
   19 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   20 00000000         ; partir de outro arquivo
   21 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   22 00000000         ; de <tam> bytes a partir da primeira 
   23 00000000         ; posição da RAM  
   24 00000000         
   25 00000000         ; ------------------------------------------------------
                       -------------------------
   26 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   27 00000000         ;                  código
   28 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   29 00000000         
   30 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   31 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   32 00000000         ; outro arquivo. No caso startup.s
   33 00000000         
   34 00000000         ; Se chamar alguma função externa 
   35 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   36 00000000         ; função <func>
   37 00000000                 IMPORT           PortF_Output
   38 00000000                 IMPORT           PortJ_Input
   39 00000000                 IMPORT           PortA_Output
   40 00000000                 IMPORT           PortQ_Output
   41 00000000                 IMPORT           PortP_Output
   42 00000000                 IMPORT           PortB_Output
   43 00000000                 IMPORT           PLL_Init



ARM Macro Assembler    Page 2 


   44 00000000                 IMPORT           SysTick_Init
   45 00000000                 IMPORT           SysTick_Wait1ms
   46 00000000                 IMPORT           GPIO_Init
   47 00000000                 IMPORT           GPIO_PORTA_AHB_DATA_A
   48 00000000                 IMPORT           GPIO_PORTQ_AHB_DATA_Q
   49 00000000                 IMPORT           GPIO_PORTP_AHB_DATA_P
   50 00000000                 IMPORT           GPIO_PORTB_AHB_DATA_B
   51 00000000         
   52 00000000         ; ------------------------------------------------------
                       -------------------------
   53 00000000         ; Função main()
   54 00000000         Start
   55 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   56 00000004 F7FF FFFE       BL               SysTick_Init ;Chama a subrotina
                                                             para inicializar o
                                                             SysTick
   57 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   58 0000000C F000 F95C       BL               Grava_Display
   59 00000010 F000 F8D6       BL               Grava_Primos ; Chama Rotina par
                                                            a gravar os números
                                                             primos
   60 00000014         INIT
   61 00000014 F04F 08AA       MOV              R8, #2_10101010 ; Inicializa os
                                                             LEDs
   62 00000018 F04F 0301       MOV              R3, #1      ; Inicializa o pass
                                                            o
   63 0000001C F04F 0C00       MOV              R12, #0     ; Inicializa o Cont
                                                            ador
   64 00000020 7825            LDRB             R5, [R4]    ; R4 é o endereço d
                                                            e começo dos número
                                                            s primos, então pri
                                                            meiro pega o primei
                                                            ro
   65 00000022         MainLoop
   66 00000022 F7FF FFFE       BL               PortJ_Input ; Chama a subrotina
                                                             que lê o estado da
                                                            s chaves e coloca o
                                                             resultado em R0
   67 00000026         ; Resultado fica no R0
   68 00000026         Verifica_Nenhuma
   69 00000026 2803            CMP              R0, #2_00000011 ; Verifica se n
                                                            enhuma chave está p
                                                            ressionada
   70 00000028 D102            BNE              Verifica_SW1 ; Se o teste viu q
                                                            ue tem pelo menos a
                                                            lguma chave pressio
                                                            nada pula para veri
                                                            ficação das chaves
   71 0000002A         Passo_Verificado                     ; Volta pra quando 
                                                             
   72 0000002A F000 F80F       BL               Atualiza_Contador_Leds ; Passa 
                                                            para atualizar o co
                                                            ntador e os registr
                                                            adores dos valores 



ARM Macro Assembler    Page 3 


                                                            dos LEDs e Displays
                                                            
   73 0000002E E03D            B                Loop_Visualiza
   74 00000030         Verifica_SW1
   75 00000030 2802            CMP              R0, #2_00000010 ; Verifica se s
                                                            omente a chave SW1 
                                                            está pressionada
   76 00000032 D104            BNE              Verifica_SW2 ; Se o teste falho
                                                            u, então não era só
                                                             a chave 1 que esta
                                                            va (ou era a chave 
                                                            2 ou era a chave 1 
                                                            e a chave 2)
   77 00000034 2B08            CMP              R3, #8      ; Compara o passo c
                                                            om 8, pois esse é o
                                                             valor máximo do co
                                                            ntador para ainda s
                                                            e somar mais um no 
                                                            passo
   78 00000036 DCF8            BGT              Passo_Verificado ; Se for maior
                                                             que 8 então não de
                                                            ve somar 1 no passo
                                                            , mesmo com o SW1 a
                                                            pertado
   79 00000038 F103 0301       ADD              R3, #1      ; Se não foi maior 
                                                            que 8 então soma 1 
                                                            no passo
   80 0000003C E7F5            B                Passo_Verificado ; Volta para o
                                                             laço principal
   81 0000003E         
   82 0000003E         Verifica_SW2
   83 0000003E 2801            CMP              R0, #2_00000001 ; Verifica se s
                                                            omente a chave SW2 
                                                            está pressionada
   84 00000040 D1F3            BNE              Passo_Verificado ; Se o teste f
                                                            alhou, então as dua
                                                            s estavam pressiona
                                                            das
   85 00000042 2B02            CMP              R3, #2      ; Compara o passo c
                                                            om 2
   86 00000044 DBF1            BLT              Passo_Verificado ; Se for menor
                                                             que 2 então não de
                                                            ve diminuir 1 no pa
                                                            sso
   87 00000046 F1A3 0301       SUB              R3, #1      ; Se não foi menor 
                                                            que 2 então diminui
                                                             1 no passo 
   88 0000004A E7EE            B                Passo_Verificado ; Volta agora 
                                                            que o Passo já foi 
                                                            mudado ou não mudad
                                                            od e acordo com os 
                                                            botões
   89 0000004C         
   90 0000004C         Atualiza_Contador_Leds               ; Para atualizar o 
                                                            contador e os leds 
                                                            e o display
   91 0000004C F000 F803       BL               Atualiza_Contador ; Atualiza o 
                                                            contador e se o con
                                                            tador for primo ele



ARM Macro Assembler    Page 4 


                                                             muda os LEDs
   92 00000050 F000 F81D       BL               Dezena_Unidade_Contador ; Atual
                                                            iza o display para 
                                                            o número do contado
                                                            r (R12)
   93 00000054 E02A            B                Loop_Visualiza ; Loop para a vi
                                                            sualização do conta
                                                            dor e dos leds para
                                                             depois voltar para
                                                             a mair
   94 00000056         
   95 00000056         Atualiza_Contador
   96 00000056 449C            ADD              R12, R3     ; Adiciona no conta
                                                            dor o passo
   97 00000058 F1BC 0F63       CMP              R12, #99    ; Compara o novo va
                                                            lor do contador com
                                                             o maximo que o dis
                                                            play consegue mostr
                                                            ar
   98 0000005C DD05            BLE              Contador_N_Reseta ; Se o contad
                                                            or não reseta então
                                                             não roda a parte d
                                                            o contador resetand
                                                            o e a memoria reset
                                                            ando
   99 0000005E F04F 0C00       MOV              R12, #0     ; Reseta o contador
                                                            
  100 00000062 F44F 6450       MOV              R4, #0X0D00 ; Reseta o endereço
                                                             do começo dos prim
                                                            os
  101 00000066 F2C2 0400       MOVT             R4, #0X2000 ; Reseta o endereço
                                                             do começo dos prim
                                                            os
  102 0000006A         Contador_N_Reseta
  103 0000006A 7827            LDRB             R7, [R4]    ; Passa o endereço 
                                                            do primo apontado p
                                                            ara o R7
  104 0000006C 45BC            CMP              R12, R7     ; Compara o valor d
                                                            o contador com o va
                                                            lor do primo atualm
                                                            ente apontado
  105 0000006E D004            BEQ              Contador_Primo ; Se é igual ent
                                                            ão quer dizer que o
                                                             contador bateu com
                                                             um dos números pri
                                                            mos
  106 00000070 DC00            BGT              Primo_Atualiza ; Já passou do p
                                                            rimo que estava naq
                                                            uele endereço então
                                                             soma um no endereç
                                                            o para passar para 
                                                            o primo seguinte e 
                                                            volta para Contador
                                                            _N_Reseta
  107 00000072 4770            BX               LR          ; Se não foi maior 
                                                            nem igual a um prim
                                                            o então já atualizo
                                                            u o contador então 
                                                            ele volta para quan



ARM Macro Assembler    Page 5 


                                                            do foi chamado 
  108 00000074         
  109 00000074         Primo_Atualiza
  110 00000074 F104 0401       ADD              R4, #1      ; Atualiza o endere
                                                            ço dos primos para 
                                                            o próximo na lista
  111 00000078 E7F7            B                Contador_N_Reseta ; Volta para 
                                                            o Contador_N_Reseta
                                                             para fazer a compa
                                                            ração com o novo pr
                                                            imo
  112 0000007A         
  113 0000007A         Contador_Primo
  114 0000007A F1B8 0FAA       CMP              R8, #2_10101010 ; Compara
  115 0000007E D000            BEQ              Opcao1
  116 00000080 D102            BNE              Opcao2
  117 00000082         Opcao1
  118 00000082 F04F 0855       MOV              R8, #2_01010101
  119 00000086 4770            BX               LR
  120 00000088         Opcao2
  121 00000088 F04F 08AA       MOV              R8, #2_10101010
  122 0000008C 4770            BX               LR          ; Volta para quando
                                                             a função foi chama
                                                            da
  123 0000008E         
  124 0000008E         Dezena_Unidade_Contador
  125 0000008E         ;Inicializa os registradores
  126 0000008E F04F 0900       MOV              R9, #0      ; Unidades
  127 00000092 F04F 0A00       MOV              R10, #0     ; Dezenas
  128 00000096 46E3            MOV              R11, R12    ; Passa valor do co
                                                            ntador para o R11
  129 00000098         
  130 00000098         Loop_Unidades_Dezenas
  131 00000098 F1BB 0F09       CMP              R11, #9     ; Compara o Contado
                                                            r com 9
  132 0000009C DC01            BGT              Ainda_Tem_Dezena ; Se for maior
                                                             então quer dizer q
                                                            ue ainda tem a part
                                                            e da dezena
  133 0000009E 46D9            MOV              R9, R11     ; Move o que restou
                                                             depois de tirar a 
                                                            unidade das dezenas
                                                             do contador
  134 000000A0 4770            BX               LR          ; Volta para quando
                                                             foi chamado a funç
                                                            ão
  135 000000A2         
  136 000000A2         Ainda_Tem_Dezena
  137 000000A2 F10A 0A01       ADD              R10, #1     ; Adiciona 1 na dez
                                                            ena
  138 000000A6 F1AB 0B0A       SUB              R11, #10    ; Diminui 1 da part
                                                            e da dezena do atua
                                                            l R11, que no começ
                                                            o do loop é o valor
                                                             do contador
  139 000000AA E7F5            B                Loop_Unidades_Dezenas ; Volta p
                                                            ara o começo do loo
                                                            p de tirar as unida
                                                            des do contador 



ARM Macro Assembler    Page 6 


  140 000000AC         
  141 000000AC         Loop_Visualiza
  142 000000AC         
  143 000000AC F04F 0B00       MOV              R11, #0     ; Inicializa regist
                                                            rador com 0 
  144 000000B0 F1BB 0F05 
                       TMP     CMP              R11, #5     ; Compara o registr
                                                            ador com o set 300
  145 000000B4 DAB5            BGE              MainLoop    ; Se chegou no valo
                                                            r setado volta ao m
                                                            ain loop
  146 000000B6 F10B 0B01       ADD              R11, #1     ; Avança temporizad
                                                            or
  147 000000BA E7FF            B                PP5         ; Se não chegou no 
                                                            valor setado Liga L
                                                            ed
  148 000000BC         
  149 000000BC         
  150 000000BC         
  151 000000BC         
  152 000000BC         PP5                                  ;Função para LEDs 
  153 000000BC 4640            MOV              R0, R8      ; Carrega para R0 o
                                                             comando dos Leds q
                                                            ue está em R8 
  154 000000BE         
  155 000000BE EA4F 1510       LSR              R5, R0, #4  ;Desloca os 4 bits 
                                                            mais significativos
                                                             para a direita, o 
                                                            registrador R5 será
                                                            
  156 000000C2         ;direcionado para o GPIO PA
  157 000000C2 EA4F 1600       LSL              R6, R0, #4  ;Desloca os 4 bits 
                                                            menos significativo
                                                            s para a esquerda
  158 000000C6 EA4F 1610       LSR              R6, R0, #4  ;Esses 4 bits são d
                                                            eslocados novamente
                                                             para a direita, o 
                                                            registrador R6 será
                                                            
  159 000000CA         ;direcionado para o GPIO PQ
  160 000000CA         ;; TRADUZ NUMERO PARA 7 SEGMENTOS
  161 000000CA 499A            LDR              R1, =GPIO_PORTA_AHB_DATA_A ;Car
                                                            rega o valor do off
                                                            set do data registe
                                                            r                  
                                                                 NUMERAR REGIST
                                                            RADOR
  162 000000CC         ;Read-Modify-Write para escrita
  163 000000CC 680A            LDR              R2, [R1]
  164 000000CE F022 0211       BIC              R2, #2_00010001 ;Primeiro limpa
                                                            mos os dois bits do
                                                             lido da porta R2 =
                                                             R2 & 11101110
  165 000000D2 EA40 0005       ORR              R0, R0, R5  ;Fazer o OR do lido
                                                             pela porta com o p
                                                            arâmetro de entrada
                                                            
  166 000000D6 6008            STR              R0, [R1]    ;Escreve na porta F
                                                             o barramento de da



ARM Macro Assembler    Page 7 


                                                            dos dos pinos F4 e 
                                                            F0
  167 000000D8         
  168 000000D8 4997            LDR              R1, =GPIO_PORTQ_AHB_DATA_Q ;Car
                                                            rega o valor do off
                                                            set do data registe
                                                            r                  
                                                                 NUMERAR REGIST
                                                            RADOR
  169 000000DA         ;Read-Modify-Write para escrita
  170 000000DA 680A            LDR              R2, [R1]
  171 000000DC F022 0211       BIC              R2, #2_00010001 ;Primeiro limpa
                                                            mos os dois bits do
                                                             lido da porta R2 =
                                                             R2 & 11101110
  172 000000E0 EA40 0006       ORR              R0, R0, R6  ;Fazer o OR do lido
                                                             pela porta com o p
                                                            arâmetro de entrada
                                                            
  173 000000E4 6008            STR              R0, [R1]    ;Escreve na porta F
                                                             o barramento de da
                                                            dos dos pinos F4 e 
                                                            F0
  174 000000E6         
  175 000000E6 4995            LDR              R1, =GPIO_PORTP_AHB_DATA_P ;Car
                                                            rega o valor do off
                                                            set do data registe
                                                            r                  
                                                                 NUMERAR REGIST
                                                            RADOR ; WRITE DATA 
                                                            P pra ligar o trans
                                                            istor
  176 000000E8         ; Para ligar leds setar PP em #2_00100000
  177 000000E8         ;Read-Modify-Write para escrita
  178 000000E8 680A            LDR              R2, [R1]
  179 000000EA F022 0220       BIC              R2, #2_00100000 ;Primeiro limpa
                                                            mos os dois bits do
                                                             lido da porta R2 =
                                                             R2 & 11101110
  180 000000EE F042 0220       ORR              R2, R2, #2_00100000 ;Fazer o OR
                                                             do lido pela porta
                                                             com o parâmetro de
                                                             entrada
  181 000000F2 600A            STR              R2, [R1]    ;Escreve na porta F
                                                             o barramento de da
                                                            dos dos pinos F4 e 
                                                            F0
  182 000000F4         
  183 000000F4         ; systic 5ms:
  184 000000F4 E92D 1FFF       PUSH             {R0, R1, r2, r3, r4, r5, r6, r7
, R8, r9, r10, r11, r12}
  185 000000F8 F04F 0007       MOV              R0, #7
  186 000000FC F7FF FFFE       BL               SysTick_Wait1ms
  187 00000100 E8BD 1FFF       POP              {R0, R1, r2, r3, r4, r5, r6, r7
, R8, r9, r10, r11, r12}
  188 00000104         
  189 00000104 498D            LDR              R1, =GPIO_PORTP_AHB_DATA_P ;Car
                                                            rega o valor do off
                                                            set do data registe



ARM Macro Assembler    Page 8 


                                                            r                  
                                                                 NUMERAR REGIST
                                                            RADOR ; WRITE DATA 
                                                            P pra desligar o tr
                                                            ansistor
  190 00000106         ; Para desligar leds setar PP em #2_00000000
  191 00000106         ;Read-Modify-Write para escrita
  192 00000106         ;LDR R2, [R1]
  193 00000106         ;BIC R2, #2_00010000                     ;Primeiro limpa
                       mos os dois bits do lido da porta R2 = R2 & 11101110
  194 00000106         ;ORR R2, R2, #2_00000000                         ;Fazer 
                       o OR do lido pela porta com o parâmetro de entrada
  195 00000106 F04F 0200       MOV              R2, #0
  196 0000010A 600A            STR              R2, [R1]    ;Escreve na porta F
                                                             o barramento de da
                                                            dos dos pinos F4 e 
                                                            F0
  197 0000010C         
  198 0000010C E7FF            B                PB4         ;Retorno
  199 0000010E         
  200 0000010E         
  201 0000010E         
  202 0000010E         
  203 0000010E         
  204 0000010E         PB4                                  ;Função para displa
                                                            y de dezenas
  205 0000010E 4650            MOV              R0, R10     ; Carrega para R0 o
                                                             comando do display
                                                             das dezenas que es
                                                            tá em R10  
  206 00000110 F44F 6160       MOV              R1, #0X0E00
  207 00000114 F2C2 0100       MOVT             R1, #0X2000
  208 00000118 4401            ADD              R1, R0
  209 0000011A 7808            LDRB             R0, [R1]
  210 0000011C         
  211 0000011C EA4F 1510       LSR              R5, R0, #4  ;Desloca os 4 bits 
                                                            mais significativos
                                                             para a direita, o 
                                                            registrador R5 será
                                                            
  212 00000120         ;direcionado para o GPIO PA
  213 00000120 EA4F 7600       LSL              R6, R0, #28 ;Desloca os 4 bits 
                                                            menos significativo
                                                            s para a esquerda
  214 00000124 EA4F 7616       LSR              R6, R6, #28 ;Esses 4 bits são d
                                                            eslocados novamente
                                                             para a direita, o 
                                                            registrador R6 será
                                                            
  215 00000128         ;direcionado para o GPIO PQ
  216 00000128         
  217 00000128 4982            LDR              R1, =GPIO_PORTA_AHB_DATA_A ;Car
                                                            rega o valor do off
                                                            set do data registe
                                                            r                  
                                                                 NUMERAR REGIST
                                                            RADOR
  218 0000012A         ;Read-Modify-Write para escrita
  219 0000012A 680A            LDR              R2, [R1]



ARM Macro Assembler    Page 9 


  220 0000012C F022 0211       BIC              R2, #2_00010001 ;Primeiro limpa
                                                            mos os dois bits do
                                                             lido da porta R2 =
                                                             R2 & 11101110
  221 00000130 EA42 0205       ORR              R2, R2, R5  ;Fazer o OR do lido
                                                             pela porta com o p
                                                            arâmetro de entrada
                                                             
  222 00000134 600A            STR              R2, [R1]    ;Escreve na porta F
                                                             o barramento de da
                                                            dos dos pinos F4 e 
                                                            F0
  223 00000136         
  224 00000136 4980            LDR              R1, =GPIO_PORTQ_AHB_DATA_Q ;Car
                                                            rega o valor do off
                                                            set do data registe
                                                            r                  
                                                                 NUMERAR REGIST
                                                            RADOR
  225 00000138         ;Read-Modify-Write para escrita
  226 00000138 680A            LDR              R2, [R1]
  227 0000013A F022 0211       BIC              R2, #2_00010001 ;Primeiro limpa
                                                            mos os dois bits do
                                                             lido da porta R2 =
                                                             R2 & 11101110
  228 0000013E EA42 0206       ORR              R2, R2, R6  ;Fazer o OR do lido
                                                             pela porta com o p
                                                            arâmetro de entrada
                                                            
  229 00000142 600A            STR              R2, [R1]    ;Escreve na porta F
                                                             o barramento de da
                                                            dos dos pinos F4 e 
                                                            F0
  230 00000144         
  231 00000144         
  232 00000144 497E            LDR              R1, =GPIO_PORTB_AHB_DATA_B ;Car
                                                            rega o valor do off
                                                            set do data registe
                                                            r                  
                                                                 NUMERAR REGIST
                                                            RADOR ; WRITE DATA 
                                                            P pra ligar o trans
                                                            istor
  233 00000146         ; Para ligar leds setar PP em #2_00100000
  234 00000146         ;Read-Modify-Write para escrita
  235 00000146         ;LDR R2, [R1]
  236 00000146         ;BIC R2, #2_00100000                     ;Primeiro limpa
                       mos os dois bits do lido da porta R2 = R2 & 11101110
  237 00000146         ;ORR R2, R2, #2_00010000                         ;Fazer 
                       o OR do lido pela porta com o parâmetro de entrada
  238 00000146 F04F 0210       MOV              R2, #2_00010000
  239 0000014A 600A            STR              R2, [R1]    ;Escreve na porta F
                                                             o barramento de da
                                                            dos dos pinos F4 e 
                                                            F0
  240 0000014C         
  241 0000014C         ; systic 5ms:
  242 0000014C E92D 1FFF       PUSH             {R0, R1, r2, r3, r4, r5, r6, r7
, R8, r9, r10, r11, r12}



ARM Macro Assembler    Page 10 


  243 00000150 F04F 0007       MOV              R0, #7
  244 00000154 F7FF FFFE       BL               SysTick_Wait1ms
  245 00000158 E8BD 1FFF       POP              {R0, R1, r2, r3, r4, r5, r6, r7
, R8, r9, r10, r11, r12}
  246 0000015C         
  247 0000015C 4978            LDR              R1, =GPIO_PORTB_AHB_DATA_B ;Car
                                                            rega o valor do off
                                                            set do data registe
                                                            r                  
                                                                 NUMERAR REGIST
                                                            RADOR ; WRITE DATA 
                                                            P pra desligar o tr
                                                            ansistor
  248 0000015E         ; Para desligar leds setar PP em #2_00000000
  249 0000015E         ;Read-Modify-Write para escrita
  250 0000015E         ;LDR R2, [R1]
  251 0000015E         ;BIC R2, #2_00010000                     ;Primeiro limpa
                       mos os dois bits do lido da porta R2 = R2 & 11101110
  252 0000015E         ;ORR R2, R2, #2_00000000                         ;Fazer 
                       o OR do lido pela porta com o parâmetro de entrada
  253 0000015E F04F 0200       MOV              R2, #0
  254 00000162 600A            STR              R2, [R1]    ;Escreve na porta F
                                                             o barramento de da
                                                            dos dos pinos F4 e 
                                                            F0
  255 00000164         
  256 00000164 E7FF            B                PB5         ;Retorno
  257 00000166         
  258 00000166         
  259 00000166         
  260 00000166         
  261 00000166         
  262 00000166         PB5                                  ;Função para displa
                                                            y de unidades
  263 00000166 4648            MOV              R0, R9      ; Carrega para R0 o
                                                             comando do display
                                                             das unidades que e
                                                            stá em R9  
  264 00000168 F44F 6160       MOV              R1, #0X0E00
  265 0000016C F2C2 0100       MOVT             R1, #0X2000
  266 00000170 4401            ADD              R1, R0
  267 00000172 7808            LDRB             R0, [R1]
  268 00000174 EA4F 1510       LSR              R5, R0, #4  ;Desloca os 4 bits 
                                                            mais significativos
                                                             para a direita, o 
                                                            registrador R5 será
                                                            
  269 00000178         ;direcionado para o GPIO PA
  270 00000178 EA4F 7600       LSL              R6, R0, #28 ;Desloca os 4 bits 
                                                            menos significativo
                                                            s para a esquerda
  271 0000017C EA4F 7616       LSR              R6, R6, #28 ;Esses 4 bits são d
                                                            eslocados novamente
                                                             para a direita, o 
                                                            registrador R6 será
                                                            
  272 00000180         ;direcionado para o GPIO PQ
  273 00000180         
  274 00000180 496C            LDR              R1, =GPIO_PORTA_AHB_DATA_A ;Car



ARM Macro Assembler    Page 11 


                                                            rega o valor do off
                                                            set do data registe
                                                            r                  
                                                                 NUMERAR REGIST
                                                            RADOR
  275 00000182         ;Read-Modify-Write para escrita
  276 00000182 680A            LDR              R2, [R1]
  277 00000184 F022 02FF       BIC              R2, #2_11111111 ;Primeiro limpa
                                                            mos os dois bits do
                                                             lido da porta R2 =
                                                             R2 & 11101110
  278 00000188 EA42 0205       ORR              R2, R2, R5  ;Fazer o OR do lido
                                                             pela porta com o p
                                                            arâmetro de entrada
                                                            
  279 0000018C 600A            STR              R2, [R1]    ;Escreve na porta F
                                                             o barramento de da
                                                            dos dos pinos F4 e 
                                                            F0
  280 0000018E         
  281 0000018E 496A            LDR              R1, =GPIO_PORTQ_AHB_DATA_Q ;Car
                                                            rega o valor do off
                                                            set do data registe
                                                            r                  
                                                                 NUMERAR REGIST
                                                            RADOR
  282 00000190         ;Read-Modify-Write para escrita
  283 00000190 680A            LDR              R2, [R1]
  284 00000192 F022 02FF       BIC              R2, #2_11111111 ;Primeiro limpa
                                                            mos os dois bits do
                                                             lido da porta R2 =
                                                             R2 & 11101110 
  285 00000196 EA42 0206       ORR              R2, R2, R6  ;Fazer o OR do lido
                                                             pela porta com o p
                                                            arâmetro de entrada
                                                            
  286 0000019A 600A            STR              R2, [R1]    ;Escreve na porta F
                                                             o barramento de da
                                                            dos dos pinos F4 e 
                                                            F0
  287 0000019C         
  288 0000019C 4968            LDR              R1, =GPIO_PORTB_AHB_DATA_B ;Car
                                                            rega o valor do off
                                                            set do data registe
                                                            r                  
                                                                 NUMERAR REGIST
                                                            RADOR ; WRITE DATA 
                                                            P pra ligar o trans
                                                            istor
  289 0000019E         ; Para ligar leds setar PP em #2_00100000
  290 0000019E         ;Read-Modify-Write para escrita
  291 0000019E         ;LDR R2, [R1]
  292 0000019E         ;BIC R2, #2_00100000                     ;Primeiro limpa
                       mos os dois bits do lido da porta R2 = R2 & 11101110
  293 0000019E         ;ORR R2, R2, #2_00100000                         ;Fazer 
                       o OR do lido pela porta com o parâmetro de entrada
  294 0000019E F04F 0220       MOV              R2, #2_00100000
  295 000001A2 600A            STR              R2, [R1]    ;Escreve na porta F
                                                             o barramento de da



ARM Macro Assembler    Page 12 


                                                            dos dos pinos F4 e 
                                                            F0
  296 000001A4         
  297 000001A4         ; systic 5ms:
  298 000001A4 E92D 1FFF       PUSH             {R0, R1, r2, r3, r4, r5, r6, r7
, R8, r9, r10, r11, r12}
  299 000001A8 F04F 0007       MOV              R0, #7
  300 000001AC F7FF FFFE       BL               SysTick_Wait1ms
  301 000001B0 E8BD 1FFF       POP              {R0, R1, r2, r3, r4, r5, r6, r7
, R8, r9, r10, r11, r12}
  302 000001B4         
  303 000001B4 4962            LDR              R1, =GPIO_PORTB_AHB_DATA_B ;Car
                                                            rega o valor do off
                                                            set do data registe
                                                            r                  
                                                                 NUMERAR REGIST
                                                            RADOR ; WRITE DATA 
                                                            P pra desligar o tr
                                                            ansistor
  304 000001B6         ; Para desligar leds setar PP em #2_00000000
  305 000001B6         ;Read-Modify-Write para escrita
  306 000001B6         ;LDR R2, [R1]
  307 000001B6         ;BIC R2, #2_00100000                     ;Primeiro limpa
                       mos os dois bits do lido da porta R2 = R2 & 11101110
  308 000001B6         ;ORR R2, R2, #2_00000000                         ;Fazer 
                       o OR do lido pela porta com o parâmetro de entrada
  309 000001B6 F04F 0200       MOV              R2, #0
  310 000001BA 600A            STR              R2, [R1]    ;Escreve na porta F
                                                             o barramento de da
                                                            dos dos pinos F4 e 
                                                            F0
  311 000001BC         
  312 000001BC E778            B                TMP         ; Reinicia o loop
  313 000001BE         
  314 000001BE         
  315 000001BE         
  316 000001BE         
  317 000001BE BF00    FIM     NOP                          ; FIM
  318 000001C0         
  319 000001C0         
  320 000001C0         Grava_Primos
  321 000001C0         ; Grava os números primos na memória
  322 000001C0         ; 2, 3, 5, 7, 11, 13, 17, 19, 23, 
  323 000001C0 F04F 0102       MOV              R1,#2
  324 000001C4 F44F 6250       MOV              R2, #0X0D00
  325 000001C8 F2C2 0200       MOVT             R2, #0X2000
  326 000001CC 7011            STRB             R1, [R2]
  327 000001CE F04F 0103       MOV              R1,#3
  328 000001D2 F102 0201       ADD              R2, #1
  329 000001D6 7011            STRB             R1, [R2]
  330 000001D8 F04F 0105       MOV              R1,#5
  331 000001DC F102 0201       ADD              R2, #1
  332 000001E0 7011            STRB             R1, [R2]
  333 000001E2 F04F 0107       MOV              R1,#7
  334 000001E6 F102 0201       ADD              R2, #1
  335 000001EA 7011            STRB             R1, [R2]
  336 000001EC F04F 010B       MOV              R1,#11
  337 000001F0 F102 0201       ADD              R2, #1
  338 000001F4 7011            STRB             R1, [R2]



ARM Macro Assembler    Page 13 


  339 000001F6 F04F 010D       MOV              R1,#13
  340 000001FA F102 0201       ADD              R2, #1
  341 000001FE 7011            STRB             R1, [R2]
  342 00000200 F04F 0111       MOV              R1,#17
  343 00000204 F102 0201       ADD              R2, #1
  344 00000208 7011            STRB             R1, [R2]
  345 0000020A F04F 0113       MOV              R1,#19
  346 0000020E F102 0201       ADD              R2, #1
  347 00000212 7011            STRB             R1, [R2]
  348 00000214 F04F 0117       MOV              R1,#23
  349 00000218 F102 0201       ADD              R2, #1
  350 0000021C 7011            STRB             R1, [R2]
  351 0000021E         ; 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 
  352 0000021E F04F 011D       MOV              R1,#29
  353 00000222 F102 0201       ADD              R2, #1
  354 00000226 7011            STRB             R1, [R2]
  355 00000228 F04F 011F       MOV              R1,#31
  356 0000022C F102 0201       ADD              R2, #1
  357 00000230 7011            STRB             R1, [R2]
  358 00000232 F04F 0125       MOV              R1,#37
  359 00000236 F102 0201       ADD              R2, #1
  360 0000023A 7011            STRB             R1, [R2]
  361 0000023C F04F 0129       MOV              R1,#41
  362 00000240 F102 0201       ADD              R2, #1
  363 00000244 7011            STRB             R1, [R2]
  364 00000246 F04F 012B       MOV              R1,#43
  365 0000024A F102 0201       ADD              R2, #1
  366 0000024E 7011            STRB             R1, [R2]
  367 00000250 F04F 012F       MOV              R1,#47
  368 00000254 F102 0201       ADD              R2, #1
  369 00000258 7011            STRB             R1, [R2]
  370 0000025A F04F 0135       MOV              R1,#53
  371 0000025E F102 0201       ADD              R2, #1
  372 00000262 7011            STRB             R1, [R2]
  373 00000264 F04F 013B       MOV              R1,#59
  374 00000268 F102 0201       ADD              R2, #1
  375 0000026C 7011            STRB             R1, [R2]
  376 0000026E F04F 013D       MOV              R1,#61
  377 00000272 F102 0201       ADD              R2, #1
  378 00000276 7011            STRB             R1, [R2]
  379 00000278 F04F 0143       MOV              R1,#67
  380 0000027C F102 0201       ADD              R2, #1
  381 00000280 7011            STRB             R1, [R2]
  382 00000282         ; 71, 73, 79, 83, 89, 97
  383 00000282 F04F 0147       MOV              R1,#71
  384 00000286 F102 0201       ADD              R2, #1
  385 0000028A 7011            STRB             R1, [R2]
  386 0000028C F04F 0149       MOV              R1,#73
  387 00000290 F102 0201       ADD              R2, #1
  388 00000294 7011            STRB             R1, [R2]
  389 00000296 F04F 014F       MOV              R1,#79
  390 0000029A F102 0201       ADD              R2, #1
  391 0000029E 7011            STRB             R1, [R2]
  392 000002A0 F04F 0153       MOV              R1,#83
  393 000002A4 F102 0201       ADD              R2, #1
  394 000002A8 7011            STRB             R1, [R2]
  395 000002AA F04F 0159       MOV              R1,#89
  396 000002AE F102 0201       ADD              R2, #1
  397 000002B2 7011            STRB             R1, [R2]



ARM Macro Assembler    Page 14 


  398 000002B4 F04F 0161       MOV              R1,#97
  399 000002B8 F102 0201       ADD              R2, #1
  400 000002BC 7011            STRB             R1, [R2]
  401 000002BE F44F 6450       MOV              R4, #0X0D00
  402 000002C2 F2C2 0400       MOVT             R4, #0X2000
  403 000002C6 E6A5            B                INIT
  404 000002C8         
  405 000002C8         Grava_Display
  406 000002C8 F04F 013F       MOV              R1,#2_00111111 ;0
  407 000002CC F44F 6260       MOV              R2, #0X0E00
  408 000002D0 F2C2 0200       MOVT             R2, #0X2000
  409 000002D4 7011            STRB             R1, [R2]
  410 000002D6 F04F 0106       MOV              R1,#2_00000110 ;1
  411 000002DA F102 0201       ADD              R2, #1
  412 000002DE 7011            STRB             R1, [R2]
  413 000002E0 F04F 015B       MOV              R1,#2_01011011 ;2
  414 000002E4 F102 0201       ADD              R2, #1
  415 000002E8 7011            STRB             R1, [R2]
  416 000002EA F04F 014F       MOV              R1,#2_01001111 ;3
  417 000002EE F102 0201       ADD              R2, #1
  418 000002F2 7011            STRB             R1, [R2]
  419 000002F4 F04F 0166       MOV              R1,#2_01100110 ;4
  420 000002F8 F102 0201       ADD              R2, #1
  421 000002FC 7011            STRB             R1, [R2]
  422 000002FE F04F 016D       MOV              R1,#2_01101101 ;5
  423 00000302 F102 0201       ADD              R2, #1
  424 00000306 7011            STRB             R1, [R2]
  425 00000308 F04F 017D       MOV              R1,#2_01111101 ;6
  426 0000030C F102 0201       ADD              R2, #1
  427 00000310 7011            STRB             R1, [R2]
  428 00000312 F04F 0107       MOV              R1,#2_00000111 ;7
  429 00000316 F102 0201       ADD              R2, #1
  430 0000031A 7011            STRB             R1, [R2]
  431 0000031C F04F 017F       MOV              R1,#2_01111111 ;8
  432 00000320 F102 0201       ADD              R2, #1
  433 00000324 7011            STRB             R1, [R2]
  434 00000326 F04F 016F       MOV              R1,#2_01101111 ;9
  435 0000032A F102 0201       ADD              R2, #1
  436 0000032E 7011            STRB             R1, [R2]
  437 00000330 4770            BX               LR
  438 00000332         
  439 00000332         
  440 00000332         
  441 00000332 BF00            NOP
  442 00000334                 ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  443 00000334                 END                          ;Fim do arquivo
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\DAELN\Downloads\
lab1\lab1\RTE -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 
-IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISI
ON_VERSION SETA 518" --predefine="TM4C1294NCPDT SETA 1" --list=.\listings\main.
lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 17 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 28 in file main.s
   Uses
      None
Comment: .text unused
Ainda_Tem_Dezena 000000A2

Symbol: Ainda_Tem_Dezena
   Definitions
      At line 136 in file main.s
   Uses
      At line 132 in file main.s
Comment: Ainda_Tem_Dezena used once
Atualiza_Contador 00000056

Symbol: Atualiza_Contador
   Definitions
      At line 95 in file main.s
   Uses
      At line 91 in file main.s
Comment: Atualiza_Contador used once
Atualiza_Contador_Leds 0000004C

Symbol: Atualiza_Contador_Leds
   Definitions
      At line 90 in file main.s
   Uses
      At line 72 in file main.s
Comment: Atualiza_Contador_Leds used once
Contador_N_Reseta 0000006A

Symbol: Contador_N_Reseta
   Definitions
      At line 102 in file main.s
   Uses
      At line 98 in file main.s
      At line 111 in file main.s

Contador_Primo 0000007A

Symbol: Contador_Primo
   Definitions
      At line 113 in file main.s
   Uses
      At line 105 in file main.s
Comment: Contador_Primo used once
Dezena_Unidade_Contador 0000008E

Symbol: Dezena_Unidade_Contador
   Definitions
      At line 124 in file main.s
   Uses
      At line 92 in file main.s
Comment: Dezena_Unidade_Contador used once
FIM 000001BE




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: FIM
   Definitions
      At line 317 in file main.s
   Uses
      None
Comment: FIM unused
Grava_Display 000002C8

Symbol: Grava_Display
   Definitions
      At line 405 in file main.s
   Uses
      At line 58 in file main.s
Comment: Grava_Display used once
Grava_Primos 000001C0

Symbol: Grava_Primos
   Definitions
      At line 320 in file main.s
   Uses
      At line 59 in file main.s
Comment: Grava_Primos used once
INIT 00000014

Symbol: INIT
   Definitions
      At line 60 in file main.s
   Uses
      At line 403 in file main.s
Comment: INIT used once
Loop_Unidades_Dezenas 00000098

Symbol: Loop_Unidades_Dezenas
   Definitions
      At line 130 in file main.s
   Uses
      At line 139 in file main.s
Comment: Loop_Unidades_Dezenas used once
Loop_Visualiza 000000AC

Symbol: Loop_Visualiza
   Definitions
      At line 141 in file main.s
   Uses
      At line 73 in file main.s
      At line 93 in file main.s

MainLoop 00000022

Symbol: MainLoop
   Definitions
      At line 65 in file main.s
   Uses
      At line 145 in file main.s
Comment: MainLoop used once
Opcao1 00000082

Symbol: Opcao1
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 117 in file main.s
   Uses
      At line 115 in file main.s
Comment: Opcao1 used once
Opcao2 00000088

Symbol: Opcao2
   Definitions
      At line 120 in file main.s
   Uses
      At line 116 in file main.s
Comment: Opcao2 used once
PB4 0000010E

Symbol: PB4
   Definitions
      At line 204 in file main.s
   Uses
      At line 198 in file main.s
Comment: PB4 used once
PB5 00000166

Symbol: PB5
   Definitions
      At line 262 in file main.s
   Uses
      At line 256 in file main.s
Comment: PB5 used once
PP5 000000BC

Symbol: PP5
   Definitions
      At line 152 in file main.s
   Uses
      At line 147 in file main.s
Comment: PP5 used once
Passo_Verificado 0000002A

Symbol: Passo_Verificado
   Definitions
      At line 71 in file main.s
   Uses
      At line 78 in file main.s
      At line 80 in file main.s
      At line 84 in file main.s
      At line 86 in file main.s
      At line 88 in file main.s

Primo_Atualiza 00000074

Symbol: Primo_Atualiza
   Definitions
      At line 109 in file main.s
   Uses
      At line 106 in file main.s
Comment: Primo_Atualiza used once
Start 00000000

Symbol: Start



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 54 in file main.s
   Uses
      At line 31 in file main.s
Comment: Start used once
TMP 000000B0

Symbol: TMP
   Definitions
      At line 144 in file main.s
   Uses
      At line 312 in file main.s
Comment: TMP used once
Verifica_Nenhuma 00000026

Symbol: Verifica_Nenhuma
   Definitions
      At line 68 in file main.s
   Uses
      None
Comment: Verifica_Nenhuma unused
Verifica_SW1 00000030

Symbol: Verifica_SW1
   Definitions
      At line 74 in file main.s
   Uses
      At line 70 in file main.s
Comment: Verifica_SW1 used once
Verifica_SW2 0000003E

Symbol: Verifica_SW2
   Definitions
      At line 82 in file main.s
   Uses
      At line 76 in file main.s
Comment: Verifica_SW2 used once
26 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 46 in file main.s
   Uses
      At line 57 in file main.s
Comment: GPIO_Init used once
GPIO_PORTA_AHB_DATA_A 00000000

Symbol: GPIO_PORTA_AHB_DATA_A
   Definitions
      At line 47 in file main.s
   Uses
      At line 161 in file main.s
      At line 217 in file main.s
      At line 274 in file main.s

GPIO_PORTB_AHB_DATA_B 00000000

Symbol: GPIO_PORTB_AHB_DATA_B
   Definitions
      At line 50 in file main.s
   Uses
      At line 232 in file main.s
      At line 247 in file main.s
      At line 288 in file main.s
      At line 303 in file main.s

GPIO_PORTP_AHB_DATA_P 00000000

Symbol: GPIO_PORTP_AHB_DATA_P
   Definitions
      At line 49 in file main.s
   Uses
      At line 175 in file main.s
      At line 189 in file main.s

GPIO_PORTQ_AHB_DATA_Q 00000000

Symbol: GPIO_PORTQ_AHB_DATA_Q
   Definitions
      At line 48 in file main.s
   Uses
      At line 168 in file main.s
      At line 224 in file main.s
      At line 281 in file main.s

PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 43 in file main.s
   Uses
      At line 55 in file main.s
Comment: PLL_Init used once
PortA_Output 00000000

Symbol: PortA_Output



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 39 in file main.s
   Uses
      None
Comment: PortA_Output unused
PortB_Output 00000000

Symbol: PortB_Output
   Definitions
      At line 42 in file main.s
   Uses
      None
Comment: PortB_Output unused
PortF_Output 00000000

Symbol: PortF_Output
   Definitions
      At line 37 in file main.s
   Uses
      None
Comment: PortF_Output unused
PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 38 in file main.s
   Uses
      At line 66 in file main.s
Comment: PortJ_Input used once
PortP_Output 00000000

Symbol: PortP_Output
   Definitions
      At line 41 in file main.s
   Uses
      None
Comment: PortP_Output unused
PortQ_Output 00000000

Symbol: PortQ_Output
   Definitions
      At line 40 in file main.s
   Uses
      None
Comment: PortQ_Output unused
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 44 in file main.s
   Uses
      At line 56 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 45 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 186 in file main.s
      At line 244 in file main.s
      At line 300 in file main.s

14 symbols
377 symbols in table
